import csv
import statistics


class Pico_csv_import:
    """
    A class to import csv generated by a picoscope
    """

    # CHANNELS_INDICES = ["A", "B", "C", "D", "E", "F", "G", "H"]

    def __init__(self, File):
        super().__init__()
        self.File = File
        self.Titles, self.Units, self.Data_list = self.create_list(self.File)
        self.Samples = self.get_Samples()
        self.Fs = self.get_Fs()

    def create_list(self, File):
        """ 
        Create 3 lists from a csv file
        * List[str] - Titles
        * List[str] - Untits
        * List/List[float] - Data 
        """
        with open(File, newline="") as csvfile:
            Data_list = []
            line = 0
            for record in csv.reader(csvfile):
                line += 1
                if line == 1:
                    Titles = record
                    for c in range(len(Titles)):
                        Data_list.append([])

                elif line == 2:
                    Units = record
                elif line >= 3:
                    for c in range(len(record)):
                        Data_float = float(record[c])
                        Data_list[c].append(Data_float)
        return Titles, Units, Data_list

    def get_Samples(self):
        """ 
        [int] - Number of Samples
        """
        return len(self.Data_list[0])

    def get_Fs(self):
        """ 
        [Hz] - Freq sample rate
        """
        Periode_list = []
        for i in range(self.Samples - 1):
            # print(self.Data_list[0][i+1])
            Periode = self.Data_list[0][i + 1] - self.Data_list[0][i]
            Periode_list.append(Periode)

        # print("min Periode_list = ", min(Periode_list))
        # print("max Periode_list = ", max(Periode_list))
        # print("mean Periode_list = ", statistics.mean(Periode_list))
        # print("mean Periode_list = ", statistics.mean(Periode_list))
        # print("pstdev Periode_list = ", statistics.pstdev(Periode_list))
        # print("variance Periode_list = ", statistics.variance(Periode_list))
        # Periode_Moy = Periode_Sum/(self.Samples - 1)

        return 1 / statistics.mean(Periode_list)


if __name__ == "__main__":
    Filetest1 = r"mydir\Table.csv"
    data = Pico_csv_import(Filetest1)
    print("\n -> data.Titles = ", data.Titles)
    print("\n -> data.Units = ", data.Units)
    print("\n -> data.Samples = ", data.Samples)
    print("\n -> data.Fs = ", data.Fs)

    # print("\n -> data.Data_list = ", data.Data_list)

    # def butter_lowpass_filter(Serie, cutoff, fs):
    #     order = 6     # Filter order
    #     # fs = Freq sample rate, [Hz]
    #     # cutoff = Cutoff frequency  [Hz]

    #     nyq = 0.5 * fs
    #     normal_cutoff = cutoff / nyq
    #     b, a = butter(order, normal_cutoff, btype='low', analog=False)
    #     Serie = lfilter(b, a, Serie)
    #     return Serie

    # Sample rate and desired cutoff frequencies (in Hz).

    # fs = 1/(Mesure.Time[1]-Mesure.Time[0])

